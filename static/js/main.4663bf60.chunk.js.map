{"version":3,"sources":["components/List.js","components/TodoList.js","App.js","index.js"],"names":["List","props","todos","setTodos","className","map","elem","completed","name","text","onClick","id","updatedArray","filter","todo","handleDelete","type","onChange","toggleComplete","TodoList","useState","todoValue","setTodoValue","textContent","setTextContent","errorTitle","setErrorTitle","errorContent","setErrorContent","createTask","setCreateTask","toggleCreate","onSubmit","e","preventDefault","length","newTodo","Date","getTime","concat","handleSubmit","style","border","target","value","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4663bf60.chunk.js","sourcesContent":["import React from \"react\";\n\nconst List = ({ props }) => {\n  let todos = props[0].todos;\n  let setTodos = props[0].setTodos;\n\n  const handleDelete = (id) => {\n    const updatedArray = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedArray);\n  };\n\n  const toggleComplete = (id) => {\n    const updatedArray = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedArray);\n  };\n\n  return (\n    <div className=\"list\">\n      {todos.map((elem) => (\n        <div\n          className={elem.completed ? \"todo completed\" : \"todo\"}\n          key={elem.id}\n        >\n          <div className=\"text\">\n            <p className=\"title\">{elem.name}</p>\n            <p className=\"content\">{elem.text}</p>\n          </div>\n          <button onClick={() => handleDelete(elem.id)}></button>\n          <input type=\"checkbox\" onChange={() => toggleComplete(elem.id)} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState } from \"react\";\nimport List from \"./List\";\n\nconst TodoList = () => {\n  const [todoValue, setTodoValue] = useState(\"\");\n  const [textContent, setTextContent] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorContent, setErrorContent] = useState(false);\n  const [createTask, setCreateTask] = useState(false);\n\n  let props = [\n    {\n      todoValue: todoValue,\n      todos: todos,\n      textContent: textContent,\n      setTextContent: setTextContent,\n      setTodos: setTodos,\n      setTodoValue: setTodoValue,\n    },\n  ];\n\n  const toggleCreate = () => {\n    setCreateTask(!createTask);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (todoValue.length < 5) {\n      setErrorTitle(true);\n    } else if (textContent.length < 15) {\n      setErrorContent(true);\n      setErrorTitle(false);\n    } else {\n      const newTodo = {\n        id: new Date().getTime(),\n        name: todoValue,\n        text: textContent,\n        completed: false,\n      };\n      setTodos([...todos].concat(newTodo));\n\n      setTodoValue(\"\");\n      setTextContent(\"\");\n      setErrorContent(false);\n      setErrorTitle(false);\n    }\n  };\n\n  return (\n    <div className=\"todolist\">\n      <header>\n        <h1>TodoList</h1>\n        <button onClick={toggleCreate}>Create</button>\n      </header>\n      {createTask && (\n        <div className=\"focus\">\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <div className=\"text\">\n              <button onClick={toggleCreate}>X</button>\n              <input\n                style={{\n                  border: errorTitle ? \"1px solid red\" : \"1px solid #8884ff\",\n                }}\n                onChange={(e) => {\n                  setTodoValue(e.target.value);\n                }}\n                type=\"text\"\n                value={todoValue}\n                placeholder=\"Title\"\n                className=\"title\"\n              />\n              {errorTitle && <p className=\"titleContent\">Min 5 charachters</p>}\n              <textarea\n                style={{\n                  border: errorContent ? \"1px solid red\" : \"1px solid #8884ff\",\n                }}\n                onChange={(e) => {\n                  setTextContent(e.target.value);\n                }}\n                type=\"text\"\n                value={textContent}\n                placeholder=\"Description\"\n              ></textarea>\n\n              {errorContent && <p className=\"content\">Min 15 charachters</p>}\n            </div>\n            <input type=\"submit\" value=\"\" />\n          </form>\n        </div>\n      )}\n\n      <ul>\n        <List props={props} />\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"purple\"></div>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.scss\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}